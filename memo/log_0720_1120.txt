2020-07-20 11:16:28,990:Logging to file ./gsteg/cr_caches/test//log_0720_1120.txt
2020-07-20 11:16:28,990:{'rgb_data': './gsteg/Charades_v1_rgb/', 'dataset': 'charades', 'train_file': './gsteg/Charades/Charades_v1_train.csv', 'val_file': './gsteg/Charades/Charades_v1_test.csv', 'groundtruth_lookup': './utils/groundtruth.p', 'rgb_arch': 'i3d', 'workers': 4, 'epochs': 10, 'start_epoch': 0, 'batch_size': 1, 'lr': 0.005, 'lr_decay_rate': 3, 'momentum': 0.9, 'weight_decay': 0.0001, 'print_freq': 10, 'resume': './gsteg/cr_caches/test/model.pth.tar', 'evaluate': False, 'rgb_pretrained_weights': './gsteg/rgb_i3d_pretrained.pt', 'inputsize': 224, 'extract_feat_dim': 1024, 'world_size': 1, 'manual_seed': 0, 'dist_url': 'tcp://224.66.41.62:23456', 'dist_backend': 'gloo', 'train_size': 0.2, 'val_size': 0.2, 'cache_dir': './gsteg/cr_caches/', 'name': 'test', 's_class': 16, 'o_class': 38, 'v_class': 33, 'accum_grad': 1, 'distributed': False, 'cache': './gsteg/cr_caches/test/'}
2020-07-20 11:16:28,993:1. create_model
2020-07-20 11:16:28,993:1.1 create model & Networks
2020-07-20 11:16:30,184:1.2 define optimizer
2020-07-20 11:16:30,184:1.3 create sub_model
2020-07-20 11:16:30,239:loading pretrained-weights from ./gsteg/rgb_i3d_pretrained.pt
2020-07-20 11:16:30,280:1.4 define loss function
2020-07-20 11:16:30,281:=> loading checkpoint './gsteg/cr_caches/test/model.pth.tar'
2020-07-20 11:16:30,371:=> loaded checkpoint './gsteg/cr_caches/test/model.pth.tar' (epoch 7)
2020-07-20 11:16:30,371:base_model
2020-07-20 11:16:30,372:DataParallel(
2020-07-20 11:16:30,372:  (module): InceptionI3d(
2020-07-20 11:16:30,372:    (avg_pool): AvgPool3d(kernel_size=[2, 7, 7], stride=(1, 1, 1), padding=0)
2020-07-20 11:16:30,372:    (dropout): Dropout(p=0.5, inplace=False)
2020-07-20 11:16:30,372:    (logits): Unit3D(
2020-07-20 11:16:30,372:      (conv3d): Conv3d(1024, 157, kernel_size=[1, 1, 1], stride=(1, 1, 1))
2020-07-20 11:16:30,373:    )
2020-07-20 11:16:30,373:    (Conv3d_1a_7x7): Unit3D(
2020-07-20 11:16:30,373:      (conv3d): Conv3d(3, 64, kernel_size=[7, 7, 7], stride=(2, 2, 2), bias=False)
2020-07-20 11:16:30,373:      (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:    )
2020-07-20 11:16:30,373:    (MaxPool3d_2a_3x3): MaxPool3dSamePadding(kernel_size=[1, 3, 3], stride=(1, 2, 2), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,373:    (Conv3d_2b_1x1): Unit3D(
2020-07-20 11:16:30,373:      (conv3d): Conv3d(64, 64, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:      (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:    )
2020-07-20 11:16:30,373:    (Conv3d_2c_3x3): Unit3D(
2020-07-20 11:16:30,373:      (conv3d): Conv3d(64, 192, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:      (bn): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:    )
2020-07-20 11:16:30,373:    (MaxPool3d_3a_3x3): MaxPool3dSamePadding(kernel_size=[1, 3, 3], stride=(1, 2, 2), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,373:    (Mixed_3b): InceptionModule(
2020-07-20 11:16:30,373:      (b0): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(192, 64, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b1a): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(192, 96, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b1b): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(96, 128, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b2a): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(192, 16, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b2b): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(16, 32, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,373:      (b3b): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(192, 32, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:    )
2020-07-20 11:16:30,373:    (Mixed_3c): InceptionModule(
2020-07-20 11:16:30,373:      (b0): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(256, 128, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b1a): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(256, 128, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b1b): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(128, 192, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b2a): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(256, 32, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,373:      (b2b): Unit3D(
2020-07-20 11:16:30,373:        (conv3d): Conv3d(32, 96, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,373:        (bn): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,373:      )
2020-07-20 11:16:30,374:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,374:      (b3b): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(256, 64, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:    )
2020-07-20 11:16:30,374:    (MaxPool3d_4a_3x3): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(2, 2, 2), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,374:    (Mixed_4b): InceptionModule(
2020-07-20 11:16:30,374:      (b0): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(480, 192, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b1a): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(480, 96, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b1b): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(96, 208, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b2a): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(480, 16, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b2b): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(16, 48, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,374:      (b3b): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(480, 64, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:    )
2020-07-20 11:16:30,374:    (Mixed_4c): InceptionModule(
2020-07-20 11:16:30,374:      (b0): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(512, 160, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(160, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b1a): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(512, 112, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b1b): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(112, 224, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(224, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b2a): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(512, 24, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b2b): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(24, 64, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,374:      (b3b): Unit3D(
2020-07-20 11:16:30,374:        (conv3d): Conv3d(512, 64, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,374:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,374:      )
2020-07-20 11:16:30,374:    )
2020-07-20 11:16:30,374:    (Mixed_4d): InceptionModule(
2020-07-20 11:16:30,375:      (b0): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(512, 128, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b1a): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(512, 128, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b1b): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(128, 256, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b2a): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(512, 24, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b2b): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(24, 64, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,375:      (b3b): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(512, 64, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:    )
2020-07-20 11:16:30,375:    (Mixed_4e): InceptionModule(
2020-07-20 11:16:30,375:      (b0): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(512, 112, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b1a): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(512, 144, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b1b): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(144, 288, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b2a): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(512, 32, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b2b): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(32, 64, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,375:      (b3b): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(512, 64, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:    )
2020-07-20 11:16:30,375:    (Mixed_4f): InceptionModule(
2020-07-20 11:16:30,375:      (b0): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(528, 256, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b1a): Unit3D(
2020-07-20 11:16:30,375:        (conv3d): Conv3d(528, 160, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,375:        (bn): BatchNorm3d(160, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,375:      )
2020-07-20 11:16:30,375:      (b1b): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(160, 320, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(320, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b2a): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(528, 32, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b2b): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(32, 128, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,376:      (b3b): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(528, 128, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:    )
2020-07-20 11:16:30,376:    (MaxPool3d_5a_2x2): MaxPool3dSamePadding(kernel_size=[2, 2, 2], stride=(2, 2, 2), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,376:    (Mixed_5b): InceptionModule(
2020-07-20 11:16:30,376:      (b0): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(832, 256, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b1a): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(832, 160, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(160, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b1b): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(160, 320, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(320, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b2a): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(832, 32, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b2b): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(32, 128, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,376:      (b3b): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(832, 128, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:    )
2020-07-20 11:16:30,376:    (Mixed_5c): InceptionModule(
2020-07-20 11:16:30,376:      (b0): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(832, 384, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b1a): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(832, 192, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b1b): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(192, 384, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b2a): Unit3D(
2020-07-20 11:16:30,376:        (conv3d): Conv3d(832, 48, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,376:        (bn): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,376:      )
2020-07-20 11:16:30,376:      (b2b): Unit3D(
2020-07-20 11:16:30,377:        (conv3d): Conv3d(48, 128, kernel_size=[3, 3, 3], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,377:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,377:      )
2020-07-20 11:16:30,377:      (b3a): MaxPool3dSamePadding(kernel_size=[3, 3, 3], stride=(1, 1, 1), padding=0, dilation=1, ceil_mode=False)
2020-07-20 11:16:30,377:      (b3b): Unit3D(
2020-07-20 11:16:30,377:        (conv3d): Conv3d(832, 128, kernel_size=[1, 1, 1], stride=(1, 1, 1), bias=False)
2020-07-20 11:16:30,377:        (bn): BatchNorm3d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
2020-07-20 11:16:30,377:      )
2020-07-20 11:16:30,377:    )
2020-07-20 11:16:30,377:  )
2020-07-20 11:16:30,377:)
2020-07-20 11:16:30,377:logits_model
2020-07-20 11:16:30,378:AsyncTFBase(
2020-07-20 11:16:30,378:  (s): Sequential(
2020-07-20 11:16:30,378:    (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,378:    (1): ReLU()
2020-07-20 11:16:30,378:    (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,378:    (3): Linear(in_features=1000, out_features=1000, bias=True)
2020-07-20 11:16:30,378:    (4): ReLU()
2020-07-20 11:16:30,378:    (5): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,378:    (6): Linear(in_features=1000, out_features=16, bias=True)
2020-07-20 11:16:30,378:  )
2020-07-20 11:16:30,378:  (o): Linear(in_features=1024, out_features=38, bias=True)
2020-07-20 11:16:30,378:  (v): Linear(in_features=1024, out_features=33, bias=True)
2020-07-20 11:16:30,378:  (so_a): BasicModule(
2020-07-20 11:16:30,378:    (layers): Sequential(
2020-07-20 11:16:30,378:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,378:      (1): ReLU()
2020-07-20 11:16:30,378:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,378:      (3): Linear(in_features=1000, out_features=80, bias=True)
2020-07-20 11:16:30,378:    )
2020-07-20 11:16:30,378:  )
2020-07-20 11:16:30,378:  (so_b): BasicModule(
2020-07-20 11:16:30,378:    (layers): Sequential(
2020-07-20 11:16:30,378:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,378:      (1): ReLU()
2020-07-20 11:16:30,378:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,378:      (3): Linear(in_features=1000, out_features=190, bias=True)
2020-07-20 11:16:30,378:    )
2020-07-20 11:16:30,378:  )
2020-07-20 11:16:30,378:  (ov_a): BasicModule(
2020-07-20 11:16:30,378:    (layers): Sequential(
2020-07-20 11:16:30,378:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,378:      (1): ReLU()
2020-07-20 11:16:30,378:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,378:      (3): Linear(in_features=1000, out_features=190, bias=True)
2020-07-20 11:16:30,378:    )
2020-07-20 11:16:30,378:  )
2020-07-20 11:16:30,378:  (ov_b): BasicModule(
2020-07-20 11:16:30,378:    (layers): Sequential(
2020-07-20 11:16:30,378:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,378:      (1): ReLU()
2020-07-20 11:16:30,378:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,378:      (3): Linear(in_features=1000, out_features=165, bias=True)
2020-07-20 11:16:30,378:    )
2020-07-20 11:16:30,378:  )
2020-07-20 11:16:30,378:  (vs_a): BasicModule(
2020-07-20 11:16:30,378:    (layers): Sequential(
2020-07-20 11:16:30,378:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,378:      (1): ReLU()
2020-07-20 11:16:30,378:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,378:      (3): Linear(in_features=1000, out_features=165, bias=True)
2020-07-20 11:16:30,378:    )
2020-07-20 11:16:30,378:  )
2020-07-20 11:16:30,378:  (vs_b): BasicModule(
2020-07-20 11:16:30,378:    (layers): Sequential(
2020-07-20 11:16:30,378:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,378:      (1): ReLU()
2020-07-20 11:16:30,378:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,378:      (3): Linear(in_features=1000, out_features=80, bias=True)
2020-07-20 11:16:30,379:    )
2020-07-20 11:16:30,379:  )
2020-07-20 11:16:30,379:  (ss_a): BasicModule(
2020-07-20 11:16:30,379:    (layers): Sequential(
2020-07-20 11:16:30,379:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,379:      (1): ReLU()
2020-07-20 11:16:30,379:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,379:      (3): Linear(in_features=1000, out_features=80, bias=True)
2020-07-20 11:16:30,379:    )
2020-07-20 11:16:30,379:  )
2020-07-20 11:16:30,379:  (ss_b): BasicModule(
2020-07-20 11:16:30,379:    (layers): Sequential(
2020-07-20 11:16:30,379:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,379:      (1): ReLU()
2020-07-20 11:16:30,379:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,379:      (3): Linear(in_features=1000, out_features=80, bias=True)
2020-07-20 11:16:30,379:    )
2020-07-20 11:16:30,379:  )
2020-07-20 11:16:30,379:  (oo_a): BasicModule(
2020-07-20 11:16:30,379:    (layers): Sequential(
2020-07-20 11:16:30,379:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,379:      (1): ReLU()
2020-07-20 11:16:30,379:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,379:      (3): Linear(in_features=1000, out_features=190, bias=True)
2020-07-20 11:16:30,379:    )
2020-07-20 11:16:30,379:  )
2020-07-20 11:16:30,379:  (oo_b): BasicModule(
2020-07-20 11:16:30,379:    (layers): Sequential(
2020-07-20 11:16:30,379:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,379:      (1): ReLU()
2020-07-20 11:16:30,379:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,379:      (3): Linear(in_features=1000, out_features=190, bias=True)
2020-07-20 11:16:30,379:    )
2020-07-20 11:16:30,379:  )
2020-07-20 11:16:30,379:  (vv_a): BasicModule(
2020-07-20 11:16:30,379:    (layers): Sequential(
2020-07-20 11:16:30,379:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,379:      (1): ReLU()
2020-07-20 11:16:30,379:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,379:      (3): Linear(in_features=1000, out_features=165, bias=True)
2020-07-20 11:16:30,379:    )
2020-07-20 11:16:30,379:  )
2020-07-20 11:16:30,379:  (vv_b): BasicModule(
2020-07-20 11:16:30,379:    (layers): Sequential(
2020-07-20 11:16:30,379:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,379:      (1): ReLU()
2020-07-20 11:16:30,379:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,379:      (3): Linear(in_features=1000, out_features=165, bias=True)
2020-07-20 11:16:30,379:    )
2020-07-20 11:16:30,379:  )
2020-07-20 11:16:30,379:  (so_t_a): BasicModule(
2020-07-20 11:16:30,379:    (layers): Sequential(
2020-07-20 11:16:30,379:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,379:      (1): ReLU()
2020-07-20 11:16:30,379:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,379:      (3): Linear(in_features=1000, out_features=80, bias=True)
2020-07-20 11:16:30,379:    )
2020-07-20 11:16:30,379:  )
2020-07-20 11:16:30,379:  (so_t_b): BasicModule(
2020-07-20 11:16:30,379:    (layers): Sequential(
2020-07-20 11:16:30,379:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,379:      (1): ReLU()
2020-07-20 11:16:30,380:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,380:      (3): Linear(in_features=1000, out_features=190, bias=True)
2020-07-20 11:16:30,380:    )
2020-07-20 11:16:30,380:  )
2020-07-20 11:16:30,380:  (ov_t_a): BasicModule(
2020-07-20 11:16:30,380:    (layers): Sequential(
2020-07-20 11:16:30,380:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,380:      (1): ReLU()
2020-07-20 11:16:30,380:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,380:      (3): Linear(in_features=1000, out_features=190, bias=True)
2020-07-20 11:16:30,380:    )
2020-07-20 11:16:30,380:  )
2020-07-20 11:16:30,380:  (ov_t_b): BasicModule(
2020-07-20 11:16:30,380:    (layers): Sequential(
2020-07-20 11:16:30,380:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,380:      (1): ReLU()
2020-07-20 11:16:30,380:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,380:      (3): Linear(in_features=1000, out_features=165, bias=True)
2020-07-20 11:16:30,380:    )
2020-07-20 11:16:30,380:  )
2020-07-20 11:16:30,380:  (vs_t_a): BasicModule(
2020-07-20 11:16:30,380:    (layers): Sequential(
2020-07-20 11:16:30,380:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,380:      (1): ReLU()
2020-07-20 11:16:30,380:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,380:      (3): Linear(in_features=1000, out_features=165, bias=True)
2020-07-20 11:16:30,380:    )
2020-07-20 11:16:30,380:  )
2020-07-20 11:16:30,380:  (vs_t_b): BasicModule(
2020-07-20 11:16:30,380:    (layers): Sequential(
2020-07-20 11:16:30,380:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,380:      (1): ReLU()
2020-07-20 11:16:30,380:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,380:      (3): Linear(in_features=1000, out_features=80, bias=True)
2020-07-20 11:16:30,380:    )
2020-07-20 11:16:30,380:  )
2020-07-20 11:16:30,380:  (os_t_a): BasicModule(
2020-07-20 11:16:30,380:    (layers): Sequential(
2020-07-20 11:16:30,380:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,380:      (1): ReLU()
2020-07-20 11:16:30,380:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,380:      (3): Linear(in_features=1000, out_features=190, bias=True)
2020-07-20 11:16:30,380:    )
2020-07-20 11:16:30,380:  )
2020-07-20 11:16:30,380:  (os_t_b): BasicModule(
2020-07-20 11:16:30,380:    (layers): Sequential(
2020-07-20 11:16:30,380:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,380:      (1): ReLU()
2020-07-20 11:16:30,380:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,380:      (3): Linear(in_features=1000, out_features=80, bias=True)
2020-07-20 11:16:30,380:    )
2020-07-20 11:16:30,380:  )
2020-07-20 11:16:30,380:  (vo_t_a): BasicModule(
2020-07-20 11:16:30,380:    (layers): Sequential(
2020-07-20 11:16:30,380:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,380:      (1): ReLU()
2020-07-20 11:16:30,380:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,380:      (3): Linear(in_features=1000, out_features=165, bias=True)
2020-07-20 11:16:30,380:    )
2020-07-20 11:16:30,380:  )
2020-07-20 11:16:30,380:  (vo_t_b): BasicModule(
2020-07-20 11:16:30,380:    (layers): Sequential(
2020-07-20 11:16:30,380:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,381:      (1): ReLU()
2020-07-20 11:16:30,381:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,381:      (3): Linear(in_features=1000, out_features=190, bias=True)
2020-07-20 11:16:30,381:    )
2020-07-20 11:16:30,381:  )
2020-07-20 11:16:30,381:  (sv_t_a): BasicModule(
2020-07-20 11:16:30,381:    (layers): Sequential(
2020-07-20 11:16:30,381:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,381:      (1): ReLU()
2020-07-20 11:16:30,381:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,381:      (3): Linear(in_features=1000, out_features=80, bias=True)
2020-07-20 11:16:30,381:    )
2020-07-20 11:16:30,381:  )
2020-07-20 11:16:30,381:  (sv_t_b): BasicModule(
2020-07-20 11:16:30,381:    (layers): Sequential(
2020-07-20 11:16:30,381:      (0): Linear(in_features=1024, out_features=1000, bias=True)
2020-07-20 11:16:30,381:      (1): ReLU()
2020-07-20 11:16:30,381:      (2): Dropout(p=0.3, inplace=False)
2020-07-20 11:16:30,381:      (3): Linear(in_features=1000, out_features=165, bias=True)
2020-07-20 11:16:30,381:    )
2020-07-20 11:16:30,381:  )
2020-07-20 11:16:30,381:)
2020-07-20 11:16:30,381:2. get_dataset
2020-07-20 11:16:30,673:2.1 dataset.get
2020-07-20 11:16:30,673:Charades __init__
2020-07-20 11:16:30,673:2.1.1 label from csv
2020-07-20 11:16:30,767:2.1.2 video and label cache
2020-07-20 11:16:30,768:cachefile ./gsteg/cr_caches/Charades_train.pkl
2020-07-20 11:16:30,769:Loading cached result from './gsteg/cr_caches/Charades_train.pkl'
2020-07-20 11:18:07,780:Charades __init__
2020-07-20 11:18:07,781:2.1.1 label from csv
2020-07-20 11:18:07,825:2.1.2 video and label cache
2020-07-20 11:18:07,826:cachefile ./gsteg/cr_caches/Charades_val.pkl
2020-07-20 11:18:07,827:Loading cached result from './gsteg/cr_caches/Charades_val.pkl'
2020-07-20 11:18:31,025:Charades __init__
2020-07-20 11:18:31,026:2.1.1 label from csv
2020-07-20 11:18:31,051:2.1.2 video and label cache
2020-07-20 11:18:31,051:cachefile ./gsteg/cr_caches/Charades_val_video.pkl
2020-07-20 11:18:31,052:Loading cached result from './gsteg/cr_caches/Charades_val_video.pkl'
2020-07-20 11:18:31,174:2.2 DataLoader
2020-07-20 11:18:31,174:Charades __len__
2020-07-20 11:18:31,174:Charades __len__
2020-07-20 11:18:31,174:Charades __len__
2020-07-20 11:18:31,174:Charades __len__
2020-07-20 11:18:31,174:train_loader
2020-07-20 11:18:31,174:<torch.utils.data.dataloader.DataLoader object at 0x7f5af6621d90>
2020-07-20 11:18:31,174:val_loader
2020-07-20 11:18:31,174:<torch.utils.data.dataloader.DataLoader object at 0x7f5af6621c90>
2020-07-20 11:18:31,174:valvideo_loader
2020-07-20 11:18:31,174:<torch.utils.data.dataloader.DataLoader object at 0x7f5af62e3350>
2020-07-20 11:18:31,174:3. Train & Test (Validation)
2020-07-20 11:18:31,174:epoch =
2020-07-20 11:18:31,174:7
2020-07-20 11:18:31,174:3.1 Training
2020-07-20 11:18:31,175:Charades __len__
2020-07-20 11:18:31,373:Charades __len__
2020-07-20 11:18:31,417:Charades __getitem__
2020-07-20 11:18:31,417:Charades __getitem__
2020-07-20 11:18:31,419:Charades __getitem__
2020-07-20 11:18:31,419:Charades __getitem__
2020-07-20 11:18:31,480:Charades __getitem__
2020-07-20 11:18:31,480:Charades __getitem__
2020-07-20 11:18:31,480:Charades __getitem__
2020-07-20 11:18:31,481:Charades __getitem__
2020-07-20 11:18:31,508:meta
2020-07-20 11:18:31,509:{'id': ['0DBQD'], 'time': tensor([700])}
2020-07-20 11:18:31,513:Charades __getitem__
2020-07-20 11:18:33,699:3.1.1 base_model
2020-07-20 11:18:34,847:3.1.2 modeling
2020-07-20 11:18:34,857:3.1.3 inference
2020-07-20 11:18:34,862:s_output
2020-07-20 11:18:34,865:tensor([[0.0092, 0.0714, 0.1864, 0.0429, 0.0415, 0.0800, 0.0297, 0.0433, 0.0653,
2020-07-20 11:18:34,865:         0.1201, 0.0684, 0.1439, 0.0118, 0.0204, 0.0183, 0.0473]],
2020-07-20 11:18:34,865:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:34,865:s_target
2020-07-20 11:18:34,865:tensor([11], device='cuda:0')
2020-07-20 11:18:34,865:v_output
2020-07-20 11:18:34,867:tensor([[0.0034, 0.0175, 0.0038, 0.0081, 0.0515, 0.0697, 0.0095, 0.0042, 0.7130,
2020-07-20 11:18:34,867:         0.0175, 0.0094, 0.0016, 0.0344, 0.0057, 0.0295, 0.0079, 0.1260, 0.0043,
2020-07-20 11:18:34,867:         0.1948, 0.0340, 0.0234, 0.0111, 0.0272, 0.1334, 0.0134, 0.0125, 0.0387,
2020-07-20 11:18:34,867:         0.0045, 0.0085, 0.0082, 0.0133, 0.1109, 0.0084]], device='cuda:0',
2020-07-20 11:18:34,867:       grad_fn=<CloneBackward>)
2020-07-20 11:18:34,867:v_target
2020-07-20 11:18:34,868:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
2020-07-20 11:18:34,868:         0, 0, 0, 0, 0, 0, 0, 1, 0]], device='cuda:0')
2020-07-20 11:18:34,868:o_output
2020-07-20 11:18:34,869:tensor([[0.1376, 0.0231, 0.0113, 0.0194, 0.0210, 0.0126, 0.0084, 0.0512, 0.0095,
2020-07-20 11:18:34,869:         0.0197, 0.1349, 0.0563, 0.0087, 0.0051, 0.0083, 0.0402, 0.1483, 0.0042,
2020-07-20 11:18:34,869:         0.0045, 0.0022, 0.0172, 0.0055, 0.0140, 0.0133, 0.0167, 0.0502, 0.0106,
2020-07-20 11:18:34,869:         0.0146, 0.0030, 0.0416, 0.0089, 0.0097, 0.0120, 0.0520, 0.0098, 0.0238,
2020-07-20 11:18:34,869:         0.0060, 0.0090]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:34,869:o_target
2020-07-20 11:18:34,870:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:34,870:         0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:34,870:3.1.4 evaluation
2020-07-20 11:18:36,052:updating parameters
2020-07-20 11:18:36,060:Charades __len__
2020-07-20 11:18:36,060:Charades __len__
2020-07-20 11:18:36,061:Epoch: [7][0/282926(1414632)]	Time 4.885 (4.885)	Data 2.523 (2.523)	Loss 5.0847 (5.0847)	S_Prec@1 0.000 (0.000)	S_Prec@5 100.000 (100.000)	O_Prec@1 100.000 (100.000)	O_Prec@5 100.000 (100.000)	V_Prec@1 100.000 (100.000)	V_Prec@5 300.000 (300.000)	SOV_Prec@1 0.000 (0.000)
2020-07-20 11:18:36,061:meta
2020-07-20 11:18:36,061:{'id': ['HBPZJ'], 'time': tensor([44])}
2020-07-20 11:18:37,894:Charades __getitem__
2020-07-20 11:18:37,895:3.1.1 base_model
2020-07-20 11:18:37,908:3.1.2 modeling
2020-07-20 11:18:37,912:3.1.3 inference
2020-07-20 11:18:37,914:s_output
2020-07-20 11:18:37,915:tensor([[0.0121, 0.0432, 0.1469, 0.0700, 0.0468, 0.0562, 0.0195, 0.0655, 0.1586,
2020-07-20 11:18:37,915:         0.0827, 0.0789, 0.1207, 0.0207, 0.0130, 0.0264, 0.0388]],
2020-07-20 11:18:37,915:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:37,915:s_target
2020-07-20 11:18:37,916:tensor([14], device='cuda:0')
2020-07-20 11:18:37,916:v_output
2020-07-20 11:18:37,917:tensor([[0.0031, 0.0214, 0.0037, 0.0090, 0.0247, 0.0293, 0.0098, 0.0042, 0.6607,
2020-07-20 11:18:37,917:         0.0213, 0.0079, 0.0013, 0.0379, 0.0062, 0.0679, 0.0053, 0.1246, 0.0038,
2020-07-20 11:18:37,917:         0.2190, 0.0447, 0.0161, 0.0085, 0.0294, 0.1209, 0.0110, 0.0124, 0.0376,
2020-07-20 11:18:37,917:         0.0042, 0.0091, 0.0071, 0.0125, 0.1204, 0.0117]], device='cuda:0',
2020-07-20 11:18:37,917:       grad_fn=<CloneBackward>)
2020-07-20 11:18:37,917:v_target
2020-07-20 11:18:37,918:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
2020-07-20 11:18:37,918:         0, 0, 0, 0, 0, 0, 0, 1, 1]], device='cuda:0')
2020-07-20 11:18:37,918:o_output
2020-07-20 11:18:37,919:tensor([[0.1455, 0.0173, 0.0096, 0.0156, 0.0204, 0.0140, 0.0076, 0.0688, 0.0102,
2020-07-20 11:18:37,919:         0.0210, 0.0673, 0.0267, 0.0087, 0.0048, 0.0073, 0.0378, 0.0670, 0.0037,
2020-07-20 11:18:37,919:         0.0041, 0.0021, 0.0371, 0.0052, 0.0112, 0.0138, 0.0164, 0.0671, 0.0124,
2020-07-20 11:18:37,919:         0.0127, 0.0027, 0.0154, 0.0093, 0.0123, 0.0082, 0.0636, 0.0070, 0.0192,
2020-07-20 11:18:37,919:         0.0060, 0.0070]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:37,919:o_target
2020-07-20 11:18:37,920:tensor([[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
2020-07-20 11:18:37,920:         0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:37,920:3.1.4 evaluation
2020-07-20 11:18:37,935:updating parameters
2020-07-20 11:18:37,939:meta
2020-07-20 11:18:37,939:{'id': ['P73KX'], 'time': tensor([76])}
2020-07-20 11:18:39,781:Charades __getitem__
2020-07-20 11:18:39,782:3.1.1 base_model
2020-07-20 11:18:39,795:3.1.2 modeling
2020-07-20 11:18:39,798:3.1.3 inference
2020-07-20 11:18:39,801:s_output
2020-07-20 11:18:39,802:tensor([[0.0074, 0.0439, 0.1659, 0.0503, 0.0503, 0.0570, 0.0220, 0.0686, 0.1142,
2020-07-20 11:18:39,802:         0.1030, 0.0743, 0.1588, 0.0100, 0.0164, 0.0199, 0.0376]],
2020-07-20 11:18:39,802:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:39,802:s_target
2020-07-20 11:18:39,802:tensor([8], device='cuda:0')
2020-07-20 11:18:39,802:v_output
2020-07-20 11:18:39,804:tensor([[0.0030, 0.0300, 0.0026, 0.0094, 0.0187, 0.0164, 0.0069, 0.0068, 0.6301,
2020-07-20 11:18:39,804:         0.0150, 0.0071, 0.0010, 0.0516, 0.0038, 0.0206, 0.0039, 0.1381, 0.0073,
2020-07-20 11:18:39,804:         0.0960, 0.0288, 0.0133, 0.0081, 0.0373, 0.1341, 0.0082, 0.0176, 0.0517,
2020-07-20 11:18:39,804:         0.0050, 0.0124, 0.0151, 0.0106, 0.0723, 0.0050]], device='cuda:0',
2020-07-20 11:18:39,804:       grad_fn=<CloneBackward>)
2020-07-20 11:18:39,804:v_target
2020-07-20 11:18:39,804:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:39,804:         0, 0, 0, 0, 1, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:39,804:o_output
2020-07-20 11:18:39,806:tensor([[0.1539, 0.0199, 0.0076, 0.0199, 0.0228, 0.0211, 0.0125, 0.0307, 0.0126,
2020-07-20 11:18:39,806:         0.0361, 0.0589, 0.0280, 0.0165, 0.0074, 0.0155, 0.0390, 0.0447, 0.0038,
2020-07-20 11:18:39,806:         0.0030, 0.0018, 0.0157, 0.0063, 0.0070, 0.0092, 0.0134, 0.0390, 0.0098,
2020-07-20 11:18:39,806:         0.0170, 0.0034, 0.0110, 0.0097, 0.0158, 0.0063, 0.0278, 0.0067, 0.0213,
2020-07-20 11:18:39,806:         0.0066, 0.0077]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:39,806:o_target
2020-07-20 11:18:39,807:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:39,807:         0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:39,807:3.1.4 evaluation
2020-07-20 11:18:39,821:updating parameters
2020-07-20 11:18:39,825:meta
2020-07-20 11:18:39,825:{'id': ['LHPQS'], 'time': tensor([132])}
2020-07-20 11:18:39,825:Charades __getitem__
2020-07-20 11:18:41,652:3.1.1 base_model
2020-07-20 11:18:41,665:3.1.2 modeling
2020-07-20 11:18:41,668:3.1.3 inference
2020-07-20 11:18:41,671:s_output
2020-07-20 11:18:41,672:tensor([[0.0124, 0.0613, 0.1576, 0.0864, 0.0313, 0.0677, 0.0200, 0.0713, 0.0757,
2020-07-20 11:18:41,672:         0.0776, 0.0734, 0.1469, 0.0115, 0.0179, 0.0296, 0.0594]],
2020-07-20 11:18:41,672:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:41,672:s_target
2020-07-20 11:18:41,672:tensor([9], device='cuda:0')
2020-07-20 11:18:41,672:v_output
2020-07-20 11:18:41,673:tensor([[0.0032, 0.0247, 0.0041, 0.0090, 0.0230, 0.0341, 0.0087, 0.0060, 0.7112,
2020-07-20 11:18:41,673:         0.0229, 0.0084, 0.0015, 0.0434, 0.0057, 0.0290, 0.0062, 0.1215, 0.0051,
2020-07-20 11:18:41,673:         0.0807, 0.0396, 0.0208, 0.0108, 0.0304, 0.1256, 0.0089, 0.0146, 0.0452,
2020-07-20 11:18:41,673:         0.0053, 0.0097, 0.0109, 0.0138, 0.1124, 0.0052]], device='cuda:0',
2020-07-20 11:18:41,673:       grad_fn=<CloneBackward>)
2020-07-20 11:18:41,673:v_target
2020-07-20 11:18:41,674:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:41,674:         0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:41,674:o_output
2020-07-20 11:18:41,675:tensor([[0.1546, 0.0295, 0.0086, 0.0199, 0.0255, 0.0185, 0.0111, 0.0261, 0.0145,
2020-07-20 11:18:41,675:         0.0264, 0.0826, 0.0419, 0.0134, 0.0067, 0.0117, 0.0375, 0.0941, 0.0054,
2020-07-20 11:18:41,675:         0.0040, 0.0025, 0.0152, 0.0063, 0.0124, 0.0173, 0.0153, 0.0526, 0.0124,
2020-07-20 11:18:41,675:         0.0184, 0.0043, 0.0249, 0.0129, 0.0137, 0.0076, 0.0268, 0.0094, 0.0241,
2020-07-20 11:18:41,675:         0.0085, 0.0087]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:41,675:o_target
2020-07-20 11:18:41,676:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:41,676:         0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:41,676:3.1.4 evaluation
2020-07-20 11:18:41,689:updating parameters
2020-07-20 11:18:41,693:meta
2020-07-20 11:18:41,693:{'id': ['2DPEC'], 'time': tensor([380])}
2020-07-20 11:18:43,517:Charades __getitem__
2020-07-20 11:18:43,518:3.1.1 base_model
2020-07-20 11:18:43,531:3.1.2 modeling
2020-07-20 11:18:43,534:3.1.3 inference
2020-07-20 11:18:43,537:s_output
2020-07-20 11:18:43,538:tensor([[0.0090, 0.0501, 0.1659, 0.0574, 0.0541, 0.0708, 0.0169, 0.0556, 0.0821,
2020-07-20 11:18:43,538:         0.0800, 0.0477, 0.1897, 0.0151, 0.0249, 0.0222, 0.0585]],
2020-07-20 11:18:43,538:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:43,538:s_target
2020-07-20 11:18:43,538:tensor([13], device='cuda:0')
2020-07-20 11:18:43,538:v_output
2020-07-20 11:18:43,539:tensor([[0.0029, 0.0197, 0.0036, 0.0089, 0.0280, 0.0358, 0.0110, 0.0049, 0.7021,
2020-07-20 11:18:43,540:         0.0205, 0.0081, 0.0013, 0.0384, 0.0064, 0.0555, 0.0067, 0.1197, 0.0043,
2020-07-20 11:18:43,540:         0.1538, 0.0411, 0.0175, 0.0082, 0.0306, 0.1195, 0.0108, 0.0121, 0.0379,
2020-07-20 11:18:43,540:         0.0043, 0.0093, 0.0083, 0.0126, 0.1179, 0.0091]], device='cuda:0',
2020-07-20 11:18:43,540:       grad_fn=<CloneBackward>)
2020-07-20 11:18:43,540:v_target
2020-07-20 11:18:43,540:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0,
2020-07-20 11:18:43,540:         0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:43,540:o_output
2020-07-20 11:18:43,541:tensor([[0.1406, 0.0227, 0.0083, 0.0154, 0.0165, 0.0114, 0.0106, 0.0526, 0.0107,
2020-07-20 11:18:43,542:         0.0214, 0.0835, 0.0350, 0.0101, 0.0057, 0.0083, 0.0402, 0.0777, 0.0040,
2020-07-20 11:18:43,542:         0.0044, 0.0022, 0.0283, 0.0055, 0.0129, 0.0165, 0.0142, 0.0646, 0.0118,
2020-07-20 11:18:43,542:         0.0130, 0.0028, 0.0215, 0.0095, 0.0112, 0.0081, 0.0481, 0.0073, 0.0195,
2020-07-20 11:18:43,542:         0.0069, 0.0086]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:43,542:o_target
2020-07-20 11:18:43,542:tensor([[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:43,542:         0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:43,542:3.1.4 evaluation
2020-07-20 11:18:43,557:updating parameters
2020-07-20 11:18:43,561:meta
2020-07-20 11:18:43,561:{'id': ['YXQWH'], 'time': tensor([424])}
2020-07-20 11:18:45,397:Charades __getitem__
2020-07-20 11:18:45,398:3.1.1 base_model
2020-07-20 11:18:45,411:3.1.2 modeling
2020-07-20 11:18:45,414:3.1.3 inference
2020-07-20 11:18:45,417:s_output
2020-07-20 11:18:45,418:tensor([[0.0186, 0.0439, 0.1386, 0.0421, 0.0585, 0.0503, 0.0216, 0.0885, 0.1476,
2020-07-20 11:18:45,418:         0.1058, 0.0865, 0.1310, 0.0094, 0.0128, 0.0172, 0.0277]],
2020-07-20 11:18:45,418:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:45,418:s_target
2020-07-20 11:18:45,418:tensor([7], device='cuda:0')
2020-07-20 11:18:45,418:v_output
2020-07-20 11:18:45,419:tensor([[0.0042, 0.0315, 0.0032, 0.0152, 0.0136, 0.0164, 0.0103, 0.0083, 0.6167,
2020-07-20 11:18:45,419:         0.0165, 0.0105, 0.0012, 0.0597, 0.0041, 0.0192, 0.0039, 0.1656, 0.0060,
2020-07-20 11:18:45,419:         0.0837, 0.0315, 0.0164, 0.0101, 0.0419, 0.1526, 0.0078, 0.0262, 0.0721,
2020-07-20 11:18:45,420:         0.0058, 0.0187, 0.0141, 0.0138, 0.0712, 0.0045]], device='cuda:0',
2020-07-20 11:18:45,420:       grad_fn=<CloneBackward>)
2020-07-20 11:18:45,420:v_target
2020-07-20 11:18:45,420:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:45,420:         0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:45,420:o_output
2020-07-20 11:18:45,422:tensor([[0.1467, 0.0367, 0.0099, 0.0258, 0.0202, 0.0167, 0.0145, 0.0292, 0.0190,
2020-07-20 11:18:45,422:         0.0502, 0.0386, 0.0240, 0.0192, 0.0095, 0.0146, 0.0551, 0.0460, 0.0057,
2020-07-20 11:18:45,422:         0.0041, 0.0023, 0.0133, 0.0077, 0.0077, 0.0137, 0.0118, 0.0370, 0.0105,
2020-07-20 11:18:45,422:         0.0242, 0.0035, 0.0105, 0.0143, 0.0248, 0.0067, 0.0262, 0.0081, 0.0307,
2020-07-20 11:18:45,422:         0.0084, 0.0090]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:45,422:o_target
2020-07-20 11:18:45,422:tensor([[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:45,422:         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:45,422:3.1.4 evaluation
2020-07-20 11:18:45,437:updating parameters
2020-07-20 11:18:45,441:meta
2020-07-20 11:18:45,442:{'id': ['FQGQS'], 'time': tensor([28])}
2020-07-20 11:18:45,442:Charades __getitem__
2020-07-20 11:18:47,287:3.1.1 base_model
2020-07-20 11:18:47,299:3.1.2 modeling
2020-07-20 11:18:47,303:3.1.3 inference
2020-07-20 11:18:47,306:s_output
2020-07-20 11:18:47,307:tensor([[0.0161, 0.0310, 0.1665, 0.0449, 0.0506, 0.0643, 0.0207, 0.0515, 0.1383,
2020-07-20 11:18:47,307:         0.1035, 0.0774, 0.1282, 0.0164, 0.0159, 0.0256, 0.0491]],
2020-07-20 11:18:47,307:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:47,307:s_target
2020-07-20 11:18:47,307:tensor([2], device='cuda:0')
2020-07-20 11:18:47,307:v_output
2020-07-20 11:18:47,308:tensor([[0.0034, 0.0386, 0.0028, 0.0179, 0.0173, 0.0187, 0.0157, 0.0111, 0.5386,
2020-07-20 11:18:47,308:         0.0184, 0.0061, 0.0013, 0.0627, 0.0049, 0.0185, 0.0047, 0.1415, 0.0064,
2020-07-20 11:18:47,308:         0.0787, 0.0378, 0.0223, 0.0093, 0.0385, 0.1270, 0.0100, 0.0206, 0.0762,
2020-07-20 11:18:47,308:         0.0067, 0.0185, 0.0165, 0.0167, 0.1089, 0.0057]], device='cuda:0',
2020-07-20 11:18:47,308:       grad_fn=<CloneBackward>)
2020-07-20 11:18:47,308:v_target
2020-07-20 11:18:47,309:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:47,309:         0, 1, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:47,309:o_output
2020-07-20 11:18:47,310:tensor([[0.1476, 0.0289, 0.0070, 0.0215, 0.0206, 0.0157, 0.0163, 0.0345, 0.0268,
2020-07-20 11:18:47,310:         0.0505, 0.0491, 0.0245, 0.0249, 0.0124, 0.0171, 0.0386, 0.0394, 0.0055,
2020-07-20 11:18:47,310:         0.0064, 0.0029, 0.0139, 0.0091, 0.0105, 0.0273, 0.0139, 0.0391, 0.0109,
2020-07-20 11:18:47,310:         0.0204, 0.0042, 0.0113, 0.0178, 0.0174, 0.0055, 0.0304, 0.0072, 0.0345,
2020-07-20 11:18:47,310:         0.0095, 0.0133]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:47,310:o_target
2020-07-20 11:18:47,311:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:47,311:         0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:47,311:3.1.4 evaluation
2020-07-20 11:18:47,325:updating parameters
2020-07-20 11:18:47,329:meta
2020-07-20 11:18:47,329:{'id': ['12LGF'], 'time': tensor([296])}
2020-07-20 11:18:47,329:Charades __getitem__
2020-07-20 11:18:49,156:3.1.1 base_model
2020-07-20 11:18:49,169:3.1.2 modeling
2020-07-20 11:18:49,172:3.1.3 inference
2020-07-20 11:18:49,175:s_output
2020-07-20 11:18:49,176:tensor([[0.0115, 0.0596, 0.1395, 0.0588, 0.0563, 0.0632, 0.0172, 0.0615, 0.1196,
2020-07-20 11:18:49,176:         0.0827, 0.0657, 0.1677, 0.0169, 0.0214, 0.0159, 0.0425]],
2020-07-20 11:18:49,176:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:49,176:s_target
2020-07-20 11:18:49,176:tensor([9], device='cuda:0')
2020-07-20 11:18:49,176:v_output
2020-07-20 11:18:49,177:tensor([[0.0029, 0.0311, 0.0041, 0.0111, 0.0268, 0.0227, 0.0099, 0.0096, 0.6638,
2020-07-20 11:18:49,177:         0.0171, 0.0063, 0.0015, 0.0527, 0.0068, 0.0268, 0.0062, 0.1553, 0.0080,
2020-07-20 11:18:49,177:         0.0568, 0.0336, 0.0170, 0.0059, 0.0378, 0.1552, 0.0122, 0.0242, 0.0669,
2020-07-20 11:18:49,177:         0.0068, 0.0155, 0.0179, 0.0152, 0.0571, 0.0046]], device='cuda:0',
2020-07-20 11:18:49,177:       grad_fn=<CloneBackward>)
2020-07-20 11:18:49,177:v_target
2020-07-20 11:18:49,178:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:49,178:         0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:49,178:o_output
2020-07-20 11:18:49,179:tensor([[0.1293, 0.0338, 0.0072, 0.0165, 0.0181, 0.0230, 0.0180, 0.0227, 0.0175,
2020-07-20 11:18:49,179:         0.0445, 0.0841, 0.0334, 0.0218, 0.0107, 0.0183, 0.0427, 0.0658, 0.0062,
2020-07-20 11:18:49,179:         0.0042, 0.0024, 0.0136, 0.0091, 0.0127, 0.0120, 0.0123, 0.0642, 0.0130,
2020-07-20 11:18:49,179:         0.0168, 0.0047, 0.0172, 0.0163, 0.0184, 0.0065, 0.0247, 0.0067, 0.0323,
2020-07-20 11:18:49,179:         0.0078, 0.0103]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:49,179:o_target
2020-07-20 11:18:49,179:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:49,179:         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:49,179:3.1.4 evaluation
2020-07-20 11:18:49,193:updating parameters
2020-07-20 11:18:49,197:meta
2020-07-20 11:18:49,197:{'id': ['8X7D6'], 'time': tensor([444])}
2020-07-20 11:18:49,197:Charades __getitem__
2020-07-20 11:18:51,029:3.1.1 base_model
2020-07-20 11:18:51,041:3.1.2 modeling
2020-07-20 11:18:51,045:3.1.3 inference
2020-07-20 11:18:51,047:s_output
2020-07-20 11:18:51,048:tensor([[0.0141, 0.0312, 0.2416, 0.0561, 0.0452, 0.0488, 0.0170, 0.0674, 0.0821,
2020-07-20 11:18:51,048:         0.0633, 0.0587, 0.1814, 0.0168, 0.0186, 0.0250, 0.0326]],
2020-07-20 11:18:51,048:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:51,048:s_target
2020-07-20 11:18:51,049:tensor([12], device='cuda:0')
2020-07-20 11:18:51,049:v_output
2020-07-20 11:18:51,050:tensor([[0.0041, 0.0249, 0.0116, 0.0093, 0.0259, 0.0314, 0.0086, 0.0052, 0.6317,
2020-07-20 11:18:51,050:         0.0184, 0.0088, 0.0020, 0.0456, 0.0050, 0.0381, 0.0084, 0.1359, 0.0068,
2020-07-20 11:18:51,050:         0.1672, 0.0330, 0.0164, 0.0088, 0.0343, 0.1426, 0.0113, 0.0157, 0.0519,
2020-07-20 11:18:51,050:         0.0053, 0.0108, 0.0104, 0.0182, 0.0870, 0.0128]], device='cuda:0',
2020-07-20 11:18:51,050:       grad_fn=<CloneBackward>)
2020-07-20 11:18:51,050:v_target
2020-07-20 11:18:51,050:tensor([[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
2020-07-20 11:18:51,050:         0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:51,050:o_output
2020-07-20 11:18:51,051:tensor([[0.1497, 0.0245, 0.0094, 0.0170, 0.0242, 0.0152, 0.0122, 0.0516, 0.0109,
2020-07-20 11:18:51,052:         0.0248, 0.0825, 0.0590, 0.0112, 0.0058, 0.0108, 0.0488, 0.1197, 0.0051,
2020-07-20 11:18:51,052:         0.0036, 0.0028, 0.0312, 0.0062, 0.0102, 0.0097, 0.0210, 0.0478, 0.0127,
2020-07-20 11:18:51,052:         0.0119, 0.0046, 0.0195, 0.0098, 0.0176, 0.0090, 0.0601, 0.0072, 0.0221,
2020-07-20 11:18:51,052:         0.0116, 0.0080]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:51,052:o_target
2020-07-20 11:18:51,052:tensor([[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:51,052:         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:51,052:3.1.4 evaluation
2020-07-20 11:18:51,066:updating parameters
2020-07-20 11:18:51,070:meta
2020-07-20 11:18:51,070:{'id': ['INT61'], 'time': tensor([448])}
2020-07-20 11:18:51,070:Charades __getitem__
2020-07-20 11:18:52,898:3.1.1 base_model
2020-07-20 11:18:52,910:3.1.2 modeling
2020-07-20 11:18:52,914:3.1.3 inference
2020-07-20 11:18:52,916:s_output
2020-07-20 11:18:52,917:tensor([[0.0084, 0.0277, 0.1820, 0.0400, 0.0591, 0.0589, 0.0223, 0.0675, 0.1172,
2020-07-20 11:18:52,917:         0.0780, 0.0671, 0.1892, 0.0096, 0.0125, 0.0166, 0.0439]],
2020-07-20 11:18:52,917:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:52,917:s_target
2020-07-20 11:18:52,918:tensor([0], device='cuda:0')
2020-07-20 11:18:52,918:v_output
2020-07-20 11:18:52,919:tensor([[0.0033, 0.0250, 0.0031, 0.0118, 0.0150, 0.0208, 0.0097, 0.0052, 0.6977,
2020-07-20 11:18:52,919:         0.0212, 0.0081, 0.0012, 0.0486, 0.0048, 0.0350, 0.0040, 0.1250, 0.0044,
2020-07-20 11:18:52,919:         0.1862, 0.0434, 0.0163, 0.0125, 0.0305, 0.1211, 0.0100, 0.0162, 0.0550,
2020-07-20 11:18:52,919:         0.0045, 0.0125, 0.0094, 0.0121, 0.1277, 0.0080]], device='cuda:0',
2020-07-20 11:18:52,919:       grad_fn=<CloneBackward>)
2020-07-20 11:18:52,919:v_target
2020-07-20 11:18:52,919:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
2020-07-20 11:18:52,919:         0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:52,920:o_output
2020-07-20 11:18:52,921:tensor([[0.1371, 0.0258, 0.0095, 0.0238, 0.0264, 0.0143, 0.0128, 0.0590, 0.0131,
2020-07-20 11:18:52,921:         0.0350, 0.0410, 0.0219, 0.0117, 0.0060, 0.0095, 0.0512, 0.0481, 0.0040,
2020-07-20 11:18:52,921:         0.0043, 0.0021, 0.0250, 0.0055, 0.0077, 0.0172, 0.0166, 0.0476, 0.0122,
2020-07-20 11:18:52,921:         0.0217, 0.0029, 0.0116, 0.0098, 0.0153, 0.0086, 0.0389, 0.0081, 0.0243,
2020-07-20 11:18:52,921:         0.0088, 0.0083]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:52,921:o_target
2020-07-20 11:18:52,921:tensor([[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:52,921:         0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:52,921:3.1.4 evaluation
2020-07-20 11:18:52,935:updating parameters
2020-07-20 11:18:52,939:meta
2020-07-20 11:18:52,939:{'id': ['5TF8P'], 'time': tensor([252])}
2020-07-20 11:18:52,939:Charades __getitem__
2020-07-20 11:18:54,768:3.1.1 base_model
2020-07-20 11:18:54,781:3.1.2 modeling
2020-07-20 11:18:54,785:3.1.3 inference
2020-07-20 11:18:54,787:s_output
2020-07-20 11:18:54,788:tensor([[0.0110, 0.0457, 0.2195, 0.0460, 0.0692, 0.0624, 0.0187, 0.0563, 0.0847,
2020-07-20 11:18:54,788:         0.0770, 0.0580, 0.1567, 0.0115, 0.0166, 0.0164, 0.0505]],
2020-07-20 11:18:54,788:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:54,788:s_target
2020-07-20 11:18:54,788:tensor([13], device='cuda:0')
2020-07-20 11:18:54,788:v_output
2020-07-20 11:18:54,789:tensor([[0.0031, 0.0285, 0.0052, 0.0191, 0.0299, 0.0222, 0.0119, 0.0064, 0.6321,
2020-07-20 11:18:54,789:         0.0167, 0.0055, 0.0018, 0.0461, 0.0057, 0.0200, 0.0074, 0.1984, 0.0059,
2020-07-20 11:18:54,789:         0.0461, 0.0362, 0.0183, 0.0098, 0.0323, 0.1578, 0.0085, 0.0235, 0.1019,
2020-07-20 11:18:54,789:         0.0065, 0.0211, 0.0122, 0.0317, 0.0828, 0.0045]], device='cuda:0',
2020-07-20 11:18:54,789:       grad_fn=<CloneBackward>)
2020-07-20 11:18:54,789:v_target
2020-07-20 11:18:54,790:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
2020-07-20 11:18:54,790:         0, 0, 1, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:54,790:o_output
2020-07-20 11:18:54,791:tensor([[0.1131, 0.0287, 0.0060, 0.0222, 0.0214, 0.0227, 0.0139, 0.0216, 0.0263,
2020-07-20 11:18:54,791:         0.0705, 0.0927, 0.0548, 0.0144, 0.0072, 0.0125, 0.0282, 0.0667, 0.0085,
2020-07-20 11:18:54,791:         0.0061, 0.0038, 0.0136, 0.0085, 0.0148, 0.0220, 0.0116, 0.0369, 0.0116,
2020-07-20 11:18:54,791:         0.0195, 0.0042, 0.0138, 0.0282, 0.0140, 0.0058, 0.0296, 0.0065, 0.0452,
2020-07-20 11:18:54,791:         0.0060, 0.0096]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:54,791:o_target
2020-07-20 11:18:54,792:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:54,792:         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:54,792:3.1.4 evaluation
2020-07-20 11:18:54,806:updating parameters
2020-07-20 11:18:54,809:Charades __len__
2020-07-20 11:18:54,809:Charades __len__
2020-07-20 11:18:54,831:Epoch: [7][10/282926(1414632)]	Time 1.871 (2.149)	Data 1.829 (1.895)	Loss 8.6900 (6.8830)	S_Prec@1 0.000 (9.091)	S_Prec@5 0.000 (54.545)	O_Prec@1 0.000 (27.273)	O_Prec@5 100.000 (90.909)	V_Prec@1 100.000 (45.455)	V_Prec@5 300.000 (127.273)	SOV_Prec@1 0.000 (0.000)
2020-07-20 11:18:54,831:meta
2020-07-20 11:18:54,831:{'id': ['NLU6W'], 'time': tensor([232])}
2020-07-20 11:18:54,831:Charades __getitem__
2020-07-20 11:18:56,659:3.1.1 base_model
2020-07-20 11:18:56,671:3.1.2 modeling
2020-07-20 11:18:56,675:3.1.3 inference
2020-07-20 11:18:56,677:s_output
2020-07-20 11:18:56,678:tensor([[0.0080, 0.0426, 0.1726, 0.0439, 0.0740, 0.0514, 0.0198, 0.0588, 0.1010,
2020-07-20 11:18:56,678:         0.0819, 0.0803, 0.1700, 0.0103, 0.0228, 0.0192, 0.0435]],
2020-07-20 11:18:56,678:       device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:56,678:s_target
2020-07-20 11:18:56,678:tensor([11], device='cuda:0')
2020-07-20 11:18:56,678:v_output
2020-07-20 11:18:56,680:tensor([[0.0039, 0.0298, 0.0033, 0.0123, 0.0174, 0.0295, 0.0091, 0.0055, 0.6911,
2020-07-20 11:18:56,680:         0.0218, 0.0096, 0.0016, 0.0587, 0.0049, 0.0294, 0.0048, 0.1505, 0.0053,
2020-07-20 11:18:56,680:         0.1673, 0.0499, 0.0153, 0.0102, 0.0315, 0.1519, 0.0087, 0.0189, 0.0481,
2020-07-20 11:18:56,680:         0.0047, 0.0126, 0.0104, 0.0128, 0.1085, 0.0074]], device='cuda:0',
2020-07-20 11:18:56,680:       grad_fn=<CloneBackward>)
2020-07-20 11:18:56,680:v_target
2020-07-20 11:18:56,680:tensor([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0,
2020-07-20 11:18:56,680:         0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:56,680:o_output
2020-07-20 11:18:56,681:tensor([[0.1492, 0.0338, 0.0121, 0.0213, 0.0368, 0.0236, 0.0092, 0.0533, 0.0132,
2020-07-20 11:18:56,681:         0.0362, 0.0488, 0.0286, 0.0122, 0.0062, 0.0108, 0.0510, 0.0725, 0.0050,
2020-07-20 11:18:56,681:         0.0043, 0.0022, 0.0225, 0.0059, 0.0102, 0.0145, 0.0186, 0.0417, 0.0146,
2020-07-20 11:18:56,681:         0.0178, 0.0031, 0.0174, 0.0113, 0.0175, 0.0092, 0.0342, 0.0077, 0.0238,
2020-07-20 11:18:56,681:         0.0076, 0.0067]], device='cuda:0', grad_fn=<CloneBackward>)
2020-07-20 11:18:56,681:o_target
2020-07-20 11:18:56,682:tensor([[1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2020-07-20 11:18:56,682:         0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]], device='cuda:0')
2020-07-20 11:18:56,682:3.1.4 evaluation
2020-07-20 11:18:56,696:updating parameters
2020-07-20 11:18:56,699:meta
2020-07-20 11:18:56,700:{'id': ['4VYE5'], 'time': tensor([1812])}
2020-07-20 11:18:58,548:Traceback (most recent call last):
2020-07-20 11:18:58,548:  File "exp/GSTEG.py", line 26, in <module>
2020-07-20 11:18:58,550:main()
2020-07-20 11:18:58,550:  File "./main.py", line 65, in main
2020-07-20 11:18:58,551:Traceback (most recent call last):
2020-07-20 11:18:58,551:  File "/usr/local/jlab/anaconda-gpu2/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
2020-07-20 11:18:58,551:    send_bytes(obj)
2020-07-20 11:18:58,551:s_top1,s_top5,o_top1,o_top5,v_top1,v_top5, sov_top1 = trainer.train(train_loader, base_model, logits_model, criterion, base_optimizer, logits_optimizer, epoch, opt)
2020-07-20 11:18:58,552:  File "/usr/local/jlab/anaconda-gpu2/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
2020-07-20 11:18:58,552:    self._send_bytes(m[offset:offset + size])
2020-07-20 11:18:58,552:Traceback (most recent call last):
2020-07-20 11:18:58,552:  File "/usr/local/jlab/anaconda-gpu2/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
2020-07-20 11:18:58,552:    self._send(header + buf)
2020-07-20 11:18:58,552:  File "/usr/local/jlab/anaconda-gpu2/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
2020-07-20 11:18:58,552:  File "./train.py", line 129, in train
2020-07-20 11:18:58,552:    send_bytes(obj)
2020-07-20 11:18:58,552:  File "/usr/local/jlab/anaconda-gpu2/lib/python3.7/multiprocessing/connection.py", line 368, in _send
2020-07-20 11:18:58,552:  File "/usr/local/jlab/anaconda-gpu2/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
2020-07-20 11:18:58,552:    n = write(self._handle, buf)
2020-07-20 11:18:58,552:    self._send_bytes(m[offset:offset + size])
2020-07-20 11:18:58,552:BrokenPipeError: [Errno 32] Broken pipe
2020-07-20 11:18:58,552:  File "/usr/local/jlab/anaconda-gpu2/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
2020-07-20 11:18:58,552:    self._send(header + buf)
2020-07-20 11:18:58,552:  File "/usr/local/jlab/anaconda-gpu2/lib/python3.7/multiprocessing/connection.py", line 368, in _send
2020-07-20 11:18:58,552:    n = write(self._handle, buf)
2020-07-20 11:18:58,552:BrokenPipeError: [Errno 32] Broken pipe
2020-07-20 11:18:58,553:gc.collect()
2020-07-20 11:18:58,553:KeyboardInterrupt
